# 生命ShardingSphere的数据源
spring.shardingsphere.datasource.names=ds0,ds1

# 配置第 1 个数据源
spring.shardingsphere.datasource.ds0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds0.jdbc-url=jdbc:mysql://localhost:3307/shard_order
spring.shardingsphere.datasource.ds0.username=root
spring.shardingsphere.datasource.ds0.password=123456
# 配置第 2 个数据源
spring.shardingsphere.datasource.ds1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.ds1.jdbc-url=jdbc:mysql://120.27.203.113:3306/sharding_order
spring.shardingsphere.datasource.ds1.username=root
spring.shardingsphere.datasource.ds1.password=yuanban_mysql


#####################################################
######t_order表分片规则（其实就是实际节点）
#####################################################
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=ds$->{0..1}.t_order_$->{0..1}
##### 分库策略，缺省表示使用默认分库策略，以下的分片策略只能选其一
# 指定分库策略（单分片键）
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=id
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=database-inline
#####指定分表策略
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=table-inline
##### 分片（分库分表）算法配置
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=ds$->{id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline.props.algorithm-expression=t_order_$->{user_id % 2}


#################################################################
############ 绑定表（t_order和t_order_item）说明：###########
# 指分片规则一致的主表和子表。：
# 1、这里t_order_item表是t_order表的绑定表（MyCat称之为子表）
# 2、根据对t_order表配置的分片（分库分表）规则――id分库、user_id分表。所以t_order_item表分片（分库分表）规则必须完全一致
#           所以t_order_item表应该有和t_order表相对应的字段：order_id关联t_order的id、 user_id
# 3、配置绑定：spring.shardingsphere.rules.sharding.binding-tables[0]=t_order,t_order_item
# 4、绑定表关联查询：使用绑定表进行多表关联查询时，必须使用分片键进行关联，否则会出现笛卡尔积关联或跨库关联，从而影响查询效率。
#################################################################

#####################################################
######t_order_item表分片规则（其实就是实际节点）配置
#####################################################
spring.shardingsphere.rules.sharding.tables.t_order_item.actual-data-nodes=ds$->{0..1}.t_order_item_$->{0..1}
##### 分库策略，缺省表示使用默认分库策略，以下的分片策略只能选其一
# 指定分库策略（单分片键）
spring.shardingsphere.rules.sharding.tables.t_order_item.database-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order_item.database-strategy.standard.sharding-algorithm-name=database-inline-item
##### 指定分表策略
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-algorithm-name=table-inline-item
##### 分片（分库分表）算法配置
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline-item.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline-item.props.algorithm-expression=ds$->{order_id % 2}
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline-item.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline-item.props.algorithm-expression=t_order_item_$->{user_id % 2}

#  绑定t_order和t_order_item
spring.shardingsphere.rules.sharding.binding-tables[0]=t_order,t_order_item


##### 广播表（MyCat中称之为全局表）：https://shardingsphere.apache.org/document/current/cn/features/sharding/concept/table/#广播表
##### 广播表（MyCat中称之为全局表）：指所有的分片数据源中都存在的表，表结构及其数据在每个数据库中均完全一致。
#####            适用于数据量不大且需要与海量数据的表进行关联查询的场景，例如：字典表。
spring.shardingsphere.rules.sharding.broadcast-tables=gender_info


#Sharding-jdbc打印sql
spring.shardingsphere.props.sql-show=true

# mybatis映射文件配置
mybatis.mapper-locations=classpath:mapper/*.xml
